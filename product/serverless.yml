service: product

frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: us-west-1

constructs:
  catalogItemsQueue:
    type: queue
    batchSize: 5
    worker:
      handler: src/workerHandler.catalogBatchProcess 

functions:
  getProductList:
    handler: handler.getProductList
    events:
      - http:
          path: products
          method: get
  createProduct:
    handler: handler.createProduct
    events:
      - http:
          path: products
          method: post
  getProductById:
    handler: handler.getProductById
    events:
      - http:
          path: products/{productId}
          method: get
          request:
            parameters:
              paths:
                productId: true

resources:
  Resources:
    SNSTopic:
      Type: AWS::SNS::Topic
      Properties:
        DisplayName: SNSTopic
        TopicName: createProductTopic
        Subscription:
          - Protocol: email
            Endpoint: jonatan_camarena@epam.com

    tableNameProducts:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: tableNameProducts
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: N
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    tableNameStock:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: tableNameStock
        AttributeDefinitions:
          - AttributeName: product_id
            AttributeType: N
        KeySchema:
          - AttributeName: product_id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
plugins:
  - serverless-lift
